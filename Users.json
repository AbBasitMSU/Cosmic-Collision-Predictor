{}

import streamlit as st
import json
import hashlib
import requests

# URL to store user credentials on GitHub
CREDENTIALS_FILE_URL = "https://raw.githubusercontent.com/your_username/your_repo/main/users.json"

# Load or initialize user credentials
def load_credentials():
    try:
        response = requests.get(CREDENTIALS_FILE_URL)
        response.raise_for_status()
        credentials = response.json()
    except (requests.exceptions.RequestException, json.JSONDecodeError):
        # If the file is not found, inaccessible, or is corrupted, initialize with an empty dictionary
        credentials = {}
    return credentials

def save_credentials(credentials):
    # Since we cannot directly save to GitHub from the Streamlit app, provide instructions to update manually
    st.warning("Saving credentials directly to GitHub is not supported. Please update the users.json file manually.")
    st.json(credentials)

# Password hashing function
def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

# Signup function
def signup():
    st.subheader("Sign Up")
    new_username = st.text_input("Choose a Username")
    new_password = st.text_input("Choose a Password", type="password")
    confirm_password = st.text_input("Confirm Password", type="password")

    if st.button("Sign Up"):
        if new_password != confirm_password:
            st.error("Passwords do not match. Please try again.")
            return

        credentials = load_credentials()
        if new_username in credentials:
            st.error("Username already exists. Please choose another.")
            return

        credentials[new_username] = hash_password(new_password)
        save_credentials(credentials)
        st.success("Sign Up Successful! You can now log in.")

# Login function
def login():
    st.subheader("Log In")
    username = st.text_input("Username")
    password = st.text_input("Password", type="password")

    if st.button("Log In"):
        credentials = load_credentials()
        hashed_password = hash_password(password)

        if username in credentials and credentials[username] == hashed_password:
            st.success("Login Successful!")
            st.session_state["logged_in"] = True
            st.session_state["username"] = username
        else:
            st.error("Invalid username or password.")

# Main function
def main():
    st.title("Asteroid Impact Prediction App")

    # Check login state
    if "logged_in" not in st.session_state:
        st.session_state["logged_in"] = False

    if st.session_state["logged_in"]:
        st.write(f"Welcome, **{st.session_state['username']}**!")
        st.write("You are now logged in.")
        if st.button("Log Out"):
            st.session_state["logged_in"] = False
    else:
        choice = st.radio("Choose an option", ["Log In", "Sign Up"])

        if choice == "Log In":
            login()
        elif choice == "Sign Up":
            signup()

# Run the app
if __name__ == "__main__":
    main()
